import { Translations } from '@/types/tool';

export const translations: Translations = {
  en: {
    common: {
      title: 'IT Tool Nexus',
      subtitle: 'Professional IT Tools Collection',
      description: 'Modern, powerful, and easy-to-use IT tools for developers and system administrators',
      toggleTheme: 'Toggle theme',
      toggleLanguage: 'Toggle language',
      copy: 'Copy',
      paste: 'Paste',
      clear: 'Clear',
      reset: 'Reset',
      generate: 'Generate',
      convert: 'Convert',
      compare: 'Compare',
      calculate: 'Calculate',
      encode: 'Encode',
      decode: 'Decode',
      input: 'Input',
      output: 'Output',
      result: 'Result',
      success: 'Success',
      error: 'Error',
      copied: 'Copied to clipboard',
      github: 'View on GitHub'
    },
    categories: {
      hash: 'Hash & Encoding',
      generator: 'Generators',
      converter: 'Converters',
      diff: 'Comparison Tools',
      network: 'Network Tools',
      'data-processing': 'Data Processing'
    },
    tools: {
      textHash: {
        name: 'Text Hash',
        description: 'Convert text to various hash algorithms (MD5, SHA1, Base64, etc.)',
        placeholder: 'Enter text to hash...'
      },
      uuidGenerator: {
        name: 'UUID Generator',
        description: 'Generate UUIDs with different versions (v1, v4) and quantities',
        generateMultiple: 'Generate Multiple',
        version: 'Version',
        quantity: 'Quantity'
      },
      textDiff: {
        name: 'Text Diff',
        description: 'Compare two text strings with visual diff highlighting',
        original: 'Original Text',
        modified: 'Modified Text'
      },
      jsonDiff: {
        name: 'JSON Diff',
        description: 'Compare JSON objects with structured difference highlighting',
        originalJson: 'Original JSON',
        modifiedJson: 'Modified JSON'
      },
      jsonXmlConverter: {
        name: 'JSON ↔ XML',
        description: 'Convert between JSON and XML formats bidirectionally',
        jsonToXml: 'JSON to XML',
        xmlToJson: 'XML to JSON'
      },
      urlEncoder: {
        name: 'URL Encoder/Decoder',
        description: 'Encode and decode URLs with proper formatting',
        urlToEncode: 'URL to Encode',
        urlToDecode: 'URL to Decode'
      },
      yamlTomlConverter: {
        name: 'YAML ↔ TOML',
        description: 'Convert between YAML and TOML formats with syntax highlighting and validation. Supports complex data structures, arrays, and nested objects with customizable formatting options.',
        yamlToToml: 'YAML to TOML',
        tomlToYaml: 'TOML to YAML'
      },
      subnetCalculator: {
        name: 'Subnet Calculator',
        description: 'Calculate network subnets, CIDR, and IP ranges',
        ipAddress: 'IP Address',
        subnetMask: 'Subnet Mask',
        cidrNotation: 'CIDR Notation'
      },
      qrGenerator: {
        name: 'QR Code Generator',
        description: 'Generate QR codes from text or URLs with customizable colors and error correction',
        inputText: 'Text or URL',
        inputPlaceholder: 'Enter text or URL to generate QR code...',
        foregroundColor: 'Foreground Color',
        backgroundColor: 'Background Color',
        errorCorrectionLevel: 'Error Correction Level',
        generate: 'Generate QR Code',
        download: 'Download QR Code',
        success: 'Success',
        error: 'Error',
        generateSuccess: 'QR code generated successfully',
        generateError: 'Failed to generate QR code',
        downloadSuccess: 'QR code downloaded successfully',
        emptyInputError: 'Please enter text or URL',
        noQrCodeError: 'Please generate QR code first',
        errorLevel: {
          L: 'L (~7% recovery)',
          M: 'M (~15% recovery)',
          Q: 'Q (~25% recovery)',
          H: 'H (~30% recovery)'
        }
      },
      dnsQuery: {
        name: 'DNS Query Tool',
        description: 'Query DNS records using DoH (DNS over HTTPS)',
        domain: 'Domain Name',
        domainPlaceholder: 'Enter domain name (e.g., example.com)',
        recordType: 'Record Type',
        provider: 'DoH Provider',
        query: 'Query DNS',
        querying: 'Querying...',
        querySettings: 'Query Settings',
        querySettingsDescription: 'Configure your DNS query parameters',
        results: 'Query Results',
        answers: 'Answer Records',
        authority: 'Authority Records',
        additional: 'Additional Records',
        authenticated: 'DNSSEC Verified',
        noRecords: 'No records found',
        querySuccess: 'DNS query completed successfully',
        queryError: 'Failed to query DNS records',
        queryFailed: 'Query failed with status',
        emptyDomainError: 'Please enter a domain name',
        invalidDomainError: 'Please enter a valid domain name',
        unknownError: 'Unknown error occurred',
        statusCodes: {
          '1': 'Format Error',
          '2': 'Server Failure',
          '3': 'Name Error (NXDOMAIN)',
          '4': 'Not Implemented',
          '5': 'Refused'
        }
      },
      xmlValidator: {
        name: 'XML Validator',
        description: 'Validate XML documents against XSD schemas with detailed error reporting',
        title: 'XML Validator',
        xsdSchema: 'XSD Schema',
        xmlDocument: 'XML Document',
        textInput: 'Text Input',
        fileUpload: 'File Upload',
        xsdPlaceholder: 'Paste your XSD schema here...',
        xmlPlaceholder: 'Paste your XML document here...',
        uploadXsd: 'Click to upload XSD file',
        uploadXml: 'Click to upload XML file',
        validate: 'Validate XML',
        validating: 'Validating...',
        clearAll: 'Clear All',
        validationResults: 'Validation Results',
        valid: 'Valid',
        invalid: 'Invalid',
        issuesFound: 'issue(s) found',
        error: 'Error',
        warning: 'Warning',
        line: 'Line',
        column: 'Column'
      },
      mermaidRenderer: {
        name: 'Mermaid Diagram Renderer',
        description: 'Create and render Mermaid diagrams with syntax highlighting and templates',
        controls: 'Controls',
        controlsDesc: 'Select templates and manage your diagram',
        template: 'Template',
        editor: 'Code Editor',
        editorDesc: 'Edit your Mermaid diagram code',
        preview: 'Preview',
        previewDesc: 'Live preview of your diagram',
        fullWidthPreview: 'Full Width Preview',
        syntaxHighlight: 'Syntax Highlighting',
        codePlaceholder: 'Enter your Mermaid diagram code here...',
        copyCode: 'Copy Code',
        downloadSvg: 'Download SVG',
        reset: 'Reset',
        fullWidth: 'Full Width',
        normalWidth: 'Normal Width',
        rendering: 'Rendering',
        rendered: 'Rendered',
        renderError: 'Render Error',
        noPreview: 'Enter code to see preview',
        copySuccess: 'Code Copied',
        copySuccessDesc: 'Mermaid code copied to clipboard',
        copyError: 'Copy Failed',
        copyErrorDesc: 'Failed to copy code to clipboard',
        downloadSuccess: 'Download Complete',
        downloadSuccessDesc: 'SVG file downloaded successfully'
      }
    }
  },
  zh: {
    common: {
      title: 'IT 工具集',
      subtitle: '专业 IT 工具集合',
      description: '现代化、强大且易于使用的开发者和系统管理员工具',
      toggleTheme: '切换主题',
      toggleLanguage: '切换语言',
      copy: '复制',
      paste: '粘贴',
      clear: '清空',
      reset: '重置',
      generate: '生成',
      convert: '转换',
      compare: '比较',
      calculate: '计算',
      encode: '编码',
      decode: '解码',
      input: '输入',
      output: '输出',
      result: '结果',
      success: '成功',
      error: '错误',
      copied: '已复制',
      github: '在 GitHub 上查看'
    },
    categories: {
      hash: '哈希与编码',
      generator: '生成器',
      converter: '转换器',
      diff: '对比工具',
      network: '网络工具',
      'data-processing': '数据处理'
    },
    tools: {
      textHash: {
        name: '文本哈希',
        description: '将文本转换为各种哈希算法（MD5、SHA1、Base64等）',
        placeholder: '输入要哈希的文本...'
      },
      uuidGenerator: {
        name: 'UUID 生成器',
        description: '生成不同版本（v1、v4）和数量的UUID',
        generateMultiple: '批量生成',
        version: '版本',
        quantity: '数量'
      },
      textDiff: {
        name: '文本对比',
        description: '比较两个文本字符串并高亮显示差异',
        original: '原始文本',
        modified: '修改后文本'
      },
      jsonDiff: {
        name: 'JSON 对比',
        description: '比较JSON对象并显示结构化差异',
        originalJson: '原始 JSON',
        modifiedJson: '修改后 JSON'
      },
      jsonXmlConverter: {
        name: 'JSON ↔ XML',
        description: 'JSON和XML格式双向转换',
        jsonToXml: 'JSON 转 XML',
        xmlToJson: 'XML 转 JSON'
      },
      urlEncoder: {
        name: 'URL 编码/解码',
        description: '正确格式化编码和解码URL',
        urlToEncode: '待编码URL',
        urlToDecode: '待解码URL'
      },
      yamlTomlConverter: {
        name: 'YAML ↔ TOML',
        description: '在YAML和TOML格式之间转换，支持语法高亮和验证。支持复杂数据结构、数组和嵌套对象，提供可自定义的格式化选项。',
        yamlToToml: 'YAML 转 TOML',
        tomlToYaml: 'TOML 转 YAML'
      },
      subnetCalculator: {
        name: '子网计算器',
        description: '计算网络子网、CIDR和IP范围',
        ipAddress: 'IP 地址',
        subnetMask: '子网掩码',
        cidrNotation: 'CIDR 表示法'
      },
      qrGenerator: {
        name: '二维码生成器',
        description: '从文本或URL生成二维码，支持自定义颜色和错误纠正级别',
        inputText: '文本或网址',
        inputPlaceholder: '输入文本或网址生成二维码...',
        foregroundColor: '前景色',
        backgroundColor: '背景色',
        errorCorrectionLevel: '错误纠正级别',
        generate: '生成二维码',
        download: '下载二维码',
        success: '成功',
        error: '错误',
        generateSuccess: '二维码生成成功',
        generateError: '二维码生成失败',
        downloadSuccess: '二维码下载成功',
        emptyInputError: '请输入文本或网址',
        noQrCodeError: '请先生成二维码',
        errorLevel: {
          L: 'L (~7% 恢复)',
          M: 'M (~15% 恢复)',
          Q: 'Q (~25% 恢复)',
          H: 'H (~30% 恢复)'
        }
      },
      dnsQuery: {
        name: 'DNS 查询工具',
        description: '使用 DoH（DNS over HTTPS）查询 DNS 记录',
        domain: '域名',
        domainPlaceholder: '输入域名（例如：example.com）',
        recordType: '记录类型',
        provider: 'DoH 提供商',
        query: '查询 DNS',
        querying: '查询中...',
        querySettings: '查询设置',
        querySettingsDescription: '配置您的 DNS 查询参数',
        results: '查询结果',
        answers: '应答记录',
        authority: '权威记录',
        additional: '附加记录',
        authenticated: 'DNSSEC 已验证',
        noRecords: '未找到记录',
        querySuccess: 'DNS 查询成功完成',
        queryError: 'DNS 记录查询失败',
        queryFailed: '查询失败，状态码',
        emptyDomainError: '请输入域名',
        invalidDomainError: '请输入有效的域名',
        unknownError: '发生未知错误',
        statusCodes: {
          '1': '格式错误',
          '2': '服务器故障',
          '3': '域名不存在 (NXDOMAIN)',
          '4': '未实现',
          '5': '拒绝'
        }
      },
      xmlValidator: {
        name: 'XML验证器',
        description: '使用XSD模式验证XML文档，提供详细的错误报告',
        title: 'XML验证器',
        xsdSchema: 'XSD模式',
        xmlDocument: 'XML文档',
        textInput: '文本输入',
        fileUpload: '文件上传',
        xsdPlaceholder: '在此粘贴您的XSD模式...',
        xmlPlaceholder: '在此粘贴您的XML文档...',
        uploadXsd: '点击上传XSD文件',
        uploadXml: '点击上传XML文件',
        validate: '验证XML',
        validating: '验证中...',
        clearAll: '清空全部',
        validationResults: '验证结果',
        valid: '有效',
        invalid: '无效',
        issuesFound: '个问题',
        error: '错误',
        warning: '警告',
        line: '行',
        column: '列'
      },
      mermaidRenderer: {
        name: 'Mermaid图表渲染器',
        description: '创建和渲染Mermaid图表，支持语法高亮和模板',
        controls: '控制面板',
        controlsDesc: '选择模板并管理您的图表',
        template: '模板',
        editor: '代码编辑器',
        editorDesc: '编辑您的Mermaid图表代码',
        preview: '预览',
        previewDesc: '图表实时预览',
        fullWidthPreview: '全宽预览',
        syntaxHighlight: '语法高亮',
        codePlaceholder: '在此输入您的Mermaid图表代码...',
        copyCode: '复制代码',
        downloadSvg: '下载SVG',
        reset: '重置',
        fullWidth: '全宽显示',
        normalWidth: '正常宽度',
        rendering: '渲染中',
        rendered: '已渲染',
        renderError: '渲染错误',
        noPreview: '输入代码以查看预览',
        copySuccess: '代码已复制',
        copySuccessDesc: 'Mermaid代码已复制到剪贴板',
        copyError: '复制失败',
        copyErrorDesc: '复制代码到剪贴板失败',
        downloadSuccess: '下载完成',
        downloadSuccessDesc: 'SVG文件下载成功'
      }
    }
  }
};